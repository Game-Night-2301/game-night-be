---
http_interactions:
- request:
    method: get
    uri: https://api.boardgameatlas.com/api/search?client_id=<BOARD_GAME_ATLAS_CLIENT_ID>&random=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json, <BOARD_GAME_ATLAS_CLIENT_ID>
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Connection:
      - keep-alive
      X-Powered-By:
      - Express
      Content-Security-Policy:
      - 'default-src ''self'' https://* s3.us-west-1.amazonaws.com www.google-analytics.com
        stats.g.doubleclick.net www.youtube.com anchor.fm www.googletagmanager.com;script-src
        * ''unsafe-inline'' ''unsafe-eval'';img-src * data:;frame-ancestors ''self''
        https://*.mybigcommerce.com;upgrade-insecure-requests;base-uri ''self'';block-all-mixed-content;font-src
        ''self'' https: data:;object-src ''none'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'''
      X-Ratelimit-Limit:
      - '420'
      X-Ratelimit-Remaining:
      - '415'
      Date:
      - Tue, 11 Jul 2023 22:17:30 GMT
      X-Ratelimit-Reset:
      - '1689113902'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Origin, X-Requested-With, Content-Type, Accept
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"2d80-d9eQP0HlpXPPJIoe9gvECn7EX0g"
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 11 Jul 2023 22:17:30 GMT
recorded_with: VCR 6.2.0
